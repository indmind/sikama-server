openapi: 3.0.3
info:
  title: 'Mage 8'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://mage8-server.test'
paths:
  /api/v1/auth/google-sign-in:
    post:
      summary: 'Google SignIn'
      description: 'Login user and create token using Google access token.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 92
                    name: 'Rini Hafshah Astuti'
                    email: pratiwi.cici@example.net
                    image_url: null
                    phone: '0626 2704 3520'
                    is_vendor: false
                  message: 'Login Success'
                  token: bearer_token_for_authentication
                properties:
                  data:
                    type: object
                    example:
                      id: 92
                      name: 'Rini Hafshah Astuti'
                      email: pratiwi.cici@example.net
                      image_url: null
                      phone: '0626 2704 3520'
                      is_vendor: false
                  message:
                    type: string
                    example: 'Login Success'
                  token:
                    type: string
                    example: bearer_token_for_authentication
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: 'Google access token. Use `debug_token` for debugging (only works in debug mode).'
                  example: debug_token
                fcm_token:
                  type: string
                  description: 'optional Firebase Cloud Messaging token.'
                  example: null
                device_name:
                  type: string
                  description: 'Device name the user is using.'
                  example: Scribe
              required:
                - access_token
                - device_name
      security: []
  /api/v1/auth/user:
    get:
      summary: 'Current User'
      description: 'Get the authenticated user.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 93
                    name: 'Diah Ika Usada'
                    email: bbudiyanto@example.org
                    image_url: null
                    phone: '(+62) 465 3058 8545'
                    is_vendor: false
                properties:
                  data:
                    type: object
                    example:
                      id: 93
                      name: 'Diah Ika Usada'
                      email: bbudiyanto@example.org
                      image_url: null
                      phone: '(+62) 465 3058 8545'
                      is_vendor: false
      tags:
        - Authentication
  /api/v1/auth/logout:
    post:
      summary: Logout
      description: 'Revoke current user token, other token can still be used.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Logout Success'
                properties:
                  message:
                    type: string
                    example: 'Logout Success'
      tags:
        - Authentication
  '/api/v1/position/{user_id}':
    post:
      summary: 'Get user position'
      description: 'Get user position based on user id'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    latitude: -84.042851
                    longitude: -146.201546
                    datetime: null
                properties:
                  data:
                    type: object
                    example:
                      latitude: -84.042851
                      longitude: -146.201546
                      datetime: null
      tags:
        - 'Position Provider'
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user'
        example: '1'
        required: true
        schema:
          type: string
  /api/v1/user/position/update:
    post:
      summary: 'Update user position'
      description: 'This will update the current user position, set to null to remove.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: 'called with empty latitude and longitude'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User position cleared'
                properties:
                  message:
                    type: string
                    example: 'User position cleared'
      tags:
        - 'User Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  description: 'optional The latitude of the user.'
                  example: -6.2145
                longitude:
                  type: number
                  description: 'optional The longitude of the user.'
                  example: 106.8451
tags:
  -
    name: Authentication
    description: "\nAPIs for managing authentication"
  -
    name: 'Position Provider'
    description: ''
  -
    name: 'User Management'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
